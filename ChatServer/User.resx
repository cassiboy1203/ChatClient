<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>